# MQ proteogenomics configuration
threads: 10
translation_table: 11

# Reference genome
reference_genome: "/root/genomes/H37Rv.fasta"

# Specify the full path to the maxquant output 'txt' file
mq_txt: "/root/txt"

# Specify DOOR2 operons file
operons: "/root/3354.txt"

#reference_proteome: '/researchdata/fhgfs/ptgmat003/HYPOHYPER/proteomes/UP000001584_14_03_2016.fasta'
reference_proteome_id: 'UP000001584'

proteome2: 'UP000001020'  # a proteome for auxillary mappping to a strain other than the reference

eval_cutoff: 0.0001

reference_taxid: 83332

reference_features: '/root/features.gff3'

# Ordered taxon ids for Reference proteome
reference_taxonomic_lineage:
  - 131567
  - 2
  - 1783272
  - 201174
  - 1760
  - 85007
  - 1762
  - 1763
  - 77643
  - 1773
  - 83332

group_taxid: 1763 # For orthologous evidence, choose the family of the species

# UniProt mapping table (required fields: 'Organism ID','Sequence Length'), for functional and othr annotation of BLAST results (select appropiate taxa level eg. taxonomy:"Myco    bacterium [1763]") 26 # The accompanying fasta is used to create the BLAST db (the two files need to correspond, and are selected by changing the uniprot download format. Gene set enrichment analysi    s info using here. 27 

mapping_database: '/researchdata/fhgfs/ptgmat003/blackburn/hypohyper/S507_S5527_hexdata/tax_1763_export_16_07_2016.tab'

mapping_fasta: '/researchdata/fhgfs/ptgmat003/blackburn/hypohyper/S507_S5527_hexdata/tax_1763_export_16_07_2016_can_iso.fasta'

# The combined fasta database from SF_Pipeline (protein database, translated six frame db with alternative start sites included
six_frame_translated: '/researchdata/fhgfs/ptgmat003/OUTPUT/S507_S5527_proteogenomics/six_frame_databases/S507_S5527_combined_allstarts_proteins.fasta'

# A dictionary of all the strains to include in the search, please include the Reference genome again if using a Reference strain.
# sf_genome: The genome used to generate the six frame database, such as de novo assembly, can be the same as the variant_genome or else the Reference genome
# variant_genome: A modified Reference genome based on VCF data, specify 'None' here if none is available.
# orfs_raw: the stop-to-stop six frame nucleotide sequences
# orfs_trans: the translated six frame sequences with alternative posible TSS sites included

reference_strains: 
    - H37Rv_WT1

strains:
    S5527:
        sf_genome: '/root/genomes/S5527.fasta'
    S507: 
        sf_genome: '/root/genomes/S507.fasta'
    H37Rv_WT1:
        sf_genome: '/root/genomes/H37Rv.fasta'
    H37Rv_1a1:
        sf_genome:

files:
    S507:
      - '150715_SF_507_ML+(1)_150728113016'
      - '150715_SF_507_ML+(3)'
      - '150715_SF_507_ST(2)'
      - '150715_SF_507_ML(3)'
      - '150715_SF_507_ML(1)_150731122127'
      - '150715_SF_507_ML(2)' 
      - '150715_SF_507_ML+(2)'
      - '150715_SF_507_ST(1)_150729014451'
    H37Rv_WT1: 
      - '141010_AG_WT1-2_50nguL'
      - '141010_AG_WT1-3_50nguL'
      - '141010_AG_WT1-1_50nguL' 
    H37Rv_1a1:  
      - '141010_AG_1a1-2_50nguL'
      - '141010_AG_1a1-3_50nguL' 
      - '141010_AG_1a1-1_50nguL'
    S5527:
      - '150715_SF_5527_ST(1)_150729170158'
      - '150715_SF_5527_ML+(1)_150730003103'
      - '150715_SF_5527_ML(2)'
      - '150715_SF_5527_ML(3)'
      - '150715_SF_5527_ML(1)_150731003405'
      - '150715_SF_5527_ML+(3)'
      - '150715_SF_5527_ST(2)'

samples:
    507_ML_1: 
        STRAIN: 'S507'
        STRAIN_GROUP: 'S507ML'
    507_ML_2:     
        STRAIN: 'S507'
        STRAIN_GROUP: 'S507ML'
    507_ML_3:     
        STRAIN: 'S507'
        STRAIN_GROUP: 'S507ML'
    507_MLexp_1: 
        STRAIN: 'S507'
        STRAIN_GROUP: 'S507MLexp'
    507_MLexp_2: 
        STRAIN: 'S507'
        STRAIN_GROUP: 'S507MLexp'
    507_MLexp_3:  
        STRAIN: 'S507'
        STRAIN_GROUP: 'S507MLexp'
    507_ST_1:
        STRAIN: 'S507'
        STRAIN_GROUP: 'S507ST'
    507_ST_2:  
        STRAIN: 'S507'
        STRAIN_GROUP: 'S507ST'
    5527_ML_1:   
        STRAIN: 'S5527'
        STRAIN_GROUP: 'S5527ML'
    5527_ML_2:    
        STRAIN: 'S5527'
        STRAIN_GROUP: 'S5527ML'
    5527_ML_3: 
        STRAIN: 'S5527'
        STRAIN_GROUP: 'S5527ML'
    5527_MLexp_1: 
         STRAIN: 'S5527'
         STRAIN_GROUP: 'S5527MLexp'
    5527_MLexp_3:
         STRAIN: 'S5527'
         STRAIN_GROUP: 'S5527MLexp'
    5527_ST_1:    
         STRAIN: 'S5527'
         STRAIN_GROUP: 'S5527ST'
    5527_ST_2:  
         STRAIN: 'S5527'
         STRAIN_GROUP: 'S5527ST'
    H37Rv_1a1_1:
        STRAIN: 'H37Rv_1a1'
        STRAIN_GROUP: 'H37Rv_1a1'
    H37Rv_1a1_2:
        STRAIN: 'H37Rv_1a1'
        STRAIN_GROUP: 'H37Rv_1a1'
    H37Rv_1a1_3:
        STRAIN: 'H37Rv_1a1'
        STRAIN_GROUP: 'H37Rv_1a1'
    H37Rv_WT1_1:
        STRAIN: 'H37Rv_WT1'
        STRAIN_GROUP: 'H37Rv_WT1'
    H37Rv_WT1_2:
        STRAIN: 'H37Rv_WT1'
        STRAIN_GROUP: 'H37Rv_WT1'
    H37Rv_WT1_3:
        STRAIN: 'H37Rv_WT1'
        STRAIN_GROUP: 'H37Rv_WT1'

# Decide on the comparisons based on LFQ and give the order eg. ['B','A']. FC will be calculated log2(B/A). A list of tuples is required.
 # LIMMA will be used for LFQ, edgeR will be used for spectral counts
comparisons:
    - !!python/tuple ['S507ML','S507MLexp']
    - !!python/tuple ['S507ML','S5527ML']
    - !!python/tuple ['S5527ML','S5527MLexp']
    - !!python/tuple ['S507MLexp','S5527MLexp']
    - !!python/tuple ['S507ML','S507ST']
    - !!python/tuple ['S5527ML','S5527ST']
    - !!python/tuple ['S507ST','S5527ST']


